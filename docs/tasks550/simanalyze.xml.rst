simanalyze -- image and analyze measurement sets created with simobserve -- simulation task
=======================================

Description
---------------------------------------

    This task is for imaging and analyzing measurement sets (MSs) simulated 
      with simobserve or simalma.   
  


Parameters
---------------------------------------

.. list-table:: Title
   :widths: 25 25 50 
   :header-rows: 1
   
   * - Parameter
     - Default
     - Description
   * - project
     - :code:`'sim'`
     - root prefix for output file names
   * - image
     - :code:`True`
     - 
   * - imagename
     - :code:`'default'`
     - 
   * - skymodel
     - :code:`''`
     - 
   * - vis
     - :code:`'default'`
     - 
   * - modelimage
     - :code:`''`
     - 
   * - imsize
     - :code:`numpy.array( [ int(0),int(0) ] )`
     - 
   * - imdirection
     - :code:`''`
     - 
   * - cell
     - :code:`''`
     - 
   * - interactive
     - :code:`False`
     - 
   * - niter
     - :code:`int(0)`
     - 
   * - threshold
     - :code:`'0.1mJy'`
     - 
   * - weighting
     - :code:`'natural'`
     - 
   * - mask
     - :code:`numpy.array( [  ] )`
     - 
   * - outertaper
     - :code:`numpy.array( [  ] )`
     - 
   * - pbcor
     - :code:`True`
     - 
   * - stokes
     - :code:`'I'`
     - 
   * - featherimage
     - :code:`''`
     - 
   * - analyze
     - :code:`False`
     - 
   * - showuv
     - :code:`True`
     - 
   * - showpsf
     - :code:`True`
     - 
   * - showmodel
     - :code:`True`
     - 
   * - showconvolved
     - :code:`False`
     - 
   * - showclean
     - :code:`True`
     - 
   * - showresidual
     - :code:`False`
     - 
   * - showdifference
     - :code:`True`
     - 
   * - showfidelity
     - :code:`True`
     - 
   * - graphics
     - :code:`'both'`
     - 
   * - verbose
     - :code:`False`
     - 
   * - overwrite
     - :code:`True`
     - 
   * - dryrun
     - :code:`False`
     - 
   * - logfile
     - :code:`''`
     - 


Parameter Explanations
=======================================



project
---------------------------------------

:code:`'sim'`


	root prefix for input and output file names.  
	This must be the directory of results generated by running 
        simobserve or simalma. In particular $project/$project.skymodel 
        will be required in order to compare output and input images.	
      


image
---------------------------------------

:code:`True`

(re)image $project.*.ms to $project.image


imagename
---------------------------------------

:code:`'default'`

simulation output image to analyze (default = first $project/*.image found)


skymodel
---------------------------------------

:code:`''`

skymodel image to analyze (the .skymodel image created by simobserve or simalma and used by one of those tasks to create an MS; if unspecified, will try to find one similar to your specified output image name)


vis
---------------------------------------

:code:`'default'`

Measurement Set(s) to image


modelimage
---------------------------------------

:code:`''`

lower resolution prior image to use in clean e.g. existing total power image


imsize
---------------------------------------

:code:`numpy.array( [ int(0),int(0) ] )`

output image size in pixels (x,y) or 0 to match model


imdirection
---------------------------------------

:code:`''`

set output image direction, (otherwise center on the model)


cell
---------------------------------------

:code:`''`

cell size with units e.g. "10arcsec" or "" to equal model


interactive
---------------------------------------

:code:`False`

interactive clean?  (make sure to set niter>0 also)


niter
---------------------------------------

:code:`int(0)`

maximum number of iterations (0 for dirty image)


threshold
---------------------------------------

:code:`'0.1mJy'`

flux level (+units) to stop cleaning


weighting
---------------------------------------

:code:`'natural'`

weighting to apply to visibilities.  briggs will use robust=0.5


mask
---------------------------------------

:code:`numpy.array( [  ] )`

Cleanbox(es), mask image(s), region(s), or a level


outertaper
---------------------------------------

:code:`numpy.array( [  ] )`

uv-taper on outer baselines in uv-plane


pbcor
---------------------------------------

:code:`True`

correct the output of synthesis images for primary beam response?


stokes
---------------------------------------

:code:`'I'`

Stokes params to image


featherimage
---------------------------------------

:code:`''`

image (e.g. total power) to feather with new image


analyze
---------------------------------------

:code:`False`

(only first 6 selected outputs will be displayed)


showuv
---------------------------------------

:code:`True`

display uv coverage


showpsf
---------------------------------------

:code:`True`

display synthesized (dirty) beam (ignored in single dish simulation)


showmodel
---------------------------------------

:code:`True`

display sky model at original resolution


showconvolved
---------------------------------------

:code:`False`

display sky model convolved with output clean beam


showclean
---------------------------------------

:code:`True`

display the synthesized image


showresidual
---------------------------------------

:code:`False`

display the clean residual image (ignored in single dish simulation)


showdifference
---------------------------------------

:code:`True`

display difference between output cleaned image and input model sky image convolved with output clean beam


showfidelity
---------------------------------------

:code:`True`

display fidelity (see help)


graphics
---------------------------------------

:code:`'both'`

display graphics at each stage to [screen|file|both|none]


verbose
---------------------------------------

:code:`False`




overwrite
---------------------------------------

:code:`True`

overwrite files starting with $project


dryrun
---------------------------------------

:code:`False`

only print information [experimental; only for interfermetric data]


logfile
---------------------------------------

:code:`''`






