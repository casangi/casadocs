<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">
  
<task category="simulation" name="simanalyze" type="function">

  <shortdescription>image and analyze measurement sets created with simobserve</shortdescription>
  <description>
    This task is for imaging and analyzing MeasurementSets simulated with simobserve or simalma.
    It consists of two main steps, controlled by the image and analyze parameters.
    -------------------------------
    Output produced: (not all will always exist, depending on input parameters)
    To support different runs with different arrays, the names have the
    configuration name from antennalist appended.
    -------------------------------
    * tclean outputs:
    [project].[cfg].image = synthesized image
    [project].[cfg].residual = residual image after cleaning
    [project].[cfg].pb = primary beam
    [project].[cfg].image.pbcor = synthesized image corrected for primary beam attenuation
    [project].[cfg].psf = synthesized (dirty) beam calculated from weighted uv distribution
    [project].[cfg].mask = clean mask
    [project].[cfg].model = sky brightness model
    [project].[cfg].sumwt = single pixel image containing sum-of-weights
    [project].[cfg].weight = Fourier transform of gridder weights, or un-normalized sum of PB-square (for all pointings)
    [project].[cfg].tclean.last = parameter file of what parameters were used in the tclean task; also generated by simutil even when dryrun=True

    * simulator outputs:
    [project].[cfg].skymodel.flat.regrid.conv = input sky regridded to match the output image, and convolved with the output clean beam
    [project].[cfg].fidelity = fidelity image
    [project].[cfg].image.png = diagnostic figure of clean image and residual
    [project].[cfg].analysis.png = diagnostic figure of difference and fidelity
    [project].[cfg].diff = difference image between flattened convolved model and flattened output
    [project].[cfg].image.flat = 2D integrated intensity image, not corrected for primary beam; see simutil.modifymodel
    [project].[cfg].simanalyze.last = saved input parameters for simanalyze task, available in CASAshell
    -------------------------------

    * &quot;project&quot; needs to be the directory of results generated by running 
      simobserve or simalma. In particular $project/$project.skymodel 
      will be required in order to compare output and input images.

    * NOTE: simanalyze was designed to be used after one or more runs of
      simobserve, and as such it assumes it will be able to find a 
      sky model image called $project/$project.skymodel, .newmodel, or 
      .compskymodel in the $project/ subdirectory.  If the simulated 
      MS has been created by means other than simply calling simobserve, 
      the user may have to copy their sky model image into the $project
      subdirectory and call it &quot;$project.skymodel&quot;.

    * interactive clean or use of more parameters than the subset 
      visible here are available by simply running the tclean task directly, 
      then using simanalyze in the mode image=False (see below).

    * Sometimes it is preferable to grid the single dish MS using the 
      sdimaging task for more control.  In that case one can input 
      the resulting single dish imaging under &quot;featherimage&quot;, only 
      put interferometric MSs in &quot;vis&quot;, and simanalyze  will clean the 
      interferometric and feather with your &quot;featherimage&quot;.

    * uses Cotton-Schwab clean for single fields and Mosaic gridding
      for multiple fields (with Clark PSF calculation in minor cycles).
  </description>
  
  <input>
    
    <param name="project" type="string">
      <shortdescription>root prefix for output file names</shortdescription>
      <description>
        root prefix for input and output file names.  
        This must be the directory of results generated by running 
        simobserve or simalma. In particular $project/$project.skymodel 
        will be required in order to compare output and input images.
      </description>
      <value>sim</value>
    </param>

<!--  IMAGE   -->    

    <param name="image" type="bool">
      <shortdescription>(re)image $project.*.ms to $project.image</shortdescription>
      <description>Controls whether tclean is called to image the MeasurementSet data. If true, input one or more simulated MSs using the vis parameter. These can include a total power MS. This task will grid any total power MS, invert and deconvolve any interferometric MS(s) (using the simutil method imtclean), and feather the results. If this parameter is set to False (e.g., if the user has created a synthesized image themselves or simanalyze has previously been run with image=True) the user should provide that image as input to the imagename parameter. This task will then attempt to find an appropriate skymodel image (such as the optionally rescaled *.skymodel produced by simobserve or simalma and used to create the MS).</description>
      <value>True</value>
    </param>    

    <!-- if IMAGE==False -->

    <param subparam="true" name="imagename" type="string"><shortdescription>simulation output image to analyze</shortdescription><description>Name of image to image/analyze, expected to be of the same form as those generated by simobserve. Defaults to the first file found with the name $project/*.image</description>

      <value>default</value>
    </param>

    <param subparam="true" name="skymodel" type="string"><shortdescription>skymodel image to analyze</shortdescription><description>Name of a specific .skymodel image created by simobserve or simalma and used by one of those tasks to create a MS. If unspecified, will try to find one similar to your specified output image name.</description>

      <value/>
    </param>

    <!-- if IMAGE==True -->
    
    <param subparam="true" name="vis" type="string"><shortdescription>Measurement Set(s) to image</shortdescription><description>Name of the Measurement Set(s) to image, specified as a string or string containing a comma separating the names. If set to &quot;default&quot;, will attempt to find and image all MeasurementSets (interferometric and single dish) in the project directory. Note that if you created MeasurementSets using simobserve, the names will include the antenna configuration. Example of a single MS: vis=&quot;mysim.alma.out03.ms&quot;. Example of multiple MSs: vis=&quot;mysim.alma.out03.ms,mysim.aca.tp.ms&quot;. Example of using the $project syntax: vis=&quot;$project.noisy.ms,$project.noisy.sd.ms&quot;.</description>

      <value>default</value>
    </param>

    <param subparam="true" name="modelimage" type="string"><shortdescription>image to use as clean prior</shortdescription><description>Sometimes it is preferable to use a low resolution (single dish or synthesis) image as a starting model during clean deconvolution of a higher resolution interferometric MS.  That is accomplished by specifying the low-resolution image as input to this parameter, and the MS to be deconvolved as input to the vis parameter. This parameter is passed to the startmodel parameter of tclean via the simutil method imtclean. Note that this is separate from the functionality controlled by the featherimage parameter and that it is not necessarily the original skymodel that was used in simobserve or simalma. Also note that the modelimage will not be used if the MS to be imaged is total power.</description>

      <value type="string"></value>
    </param>
    
    <param subparam="true" name="imsize" type="intArray"><shortdescription>output image size in pixel units</shortdescription><description>A list of integers corresponding to the number of pixels in (x,y) dimensions of output image. If 0, will attempt to match model image.</description>

      <value type="intArray"><value>0</value><value>0</value></value>
    </param>

    <param subparam="true" name="imdirection" type="string"><shortdescription>set output image direction</shortdescription><description>A string corresponding to a direction to adopt as phase center, including epoch, right ascension, and declination. If unset, will adopt center on the model.</description>

      <value type="string"></value>
    </param>

    <param subparam="true" name="cell" type="any"><shortdescription>cell size with units</shortdescription><description>Specify the cell size with units, e.g., &quot;10arcsec&quot;. If left unset (an empty string), the model cell size will be used. This is the default setting.</description>

      <value type="string"></value>
    </param>

    <param subparam="true" name="interactive" type="bool"><shortdescription>call tclean in interactive mode</shortdescription><description>Controls how the simutil method imtclean will call the tclean task. If this parameter is set to True, make sure to set the parameter niter to a value &gt;0.</description>

      <value type="bool">False</value>
    </param>

<!-- force the same channelization as the ms -->
<!--
    <param subparam="true" name="start" type="string"><shortdescription>frequency of first channel (default=ms)</shortdescription><description>frequency of first channel (default=ms)</description>

      <value>89GHz</value>
    </param>    

    <param type="string" name="width" subparam="true"><shortdescription>channel width (default=ms)</shortdescription><description>channel width (default=ms)</description>

      <value>10MHz</value>
    </param>

    <param type="int" name="nchan" subparam="true"><shortdescription>number of channels or -1 for full range</shortdescription><description>number of channels or -1 for full range</description>

      <value>-1</value>
    </param>
-->    

    <param subparam="true" name="niter" type="int"><shortdescription>maximum number of iterations</shortdescription><description>Controls the value of the niter parameter in tclean call, and thus the maximum number of iterations per minor cycle. Set to 0 to produce a dirty image. Can also be modified through the viewer GUI via the interactive parameter.</description>

      <value>0</value>
    </param>

    <param subparam="true" name="threshold" type="string"><shortdescription>target flux level and units</shortdescription><description>Set the quantity corresponding to the target flux level at which to stop cleaning. This value is passed to tclean via the simutil method imtclean.</description>

      <value>0.1mJy</value>
    </param>

    <param subparam="true" name="weighting" type="string"><shortdescription>control image weighting method</shortdescription><description>Set the weighting scheme to apply to visibilities during image reconstruction. If set to briggs, will use the tclean default robust parameter (0.5)</description>

      <value>natural</value>
      <allowed kind="enum">
  <value>natural</value>
  <value>uniform</value>
  <value>briggs</value>  
      </allowed>
    </param>

    <param subparam="true" name="mask" type="any"><shortdescription>Cleanbox(es), mask image(s), region(s), or a level</shortdescription><description>Accepts a list of cleanbox(es), mask image file name(s), region(s), and/or a primary beam coverage level. Input to this parameter will specify areas to be searched for clean components. tclean tends to perform better and is less likely to diverge if the component placement is limited by a mask to where real emission is expected. See the tclean task documentation for more information about masking. Example of a pixel range mask: mask=[110,110,150,145]</description>
      <any type="variant"/>
      
      <value type="intArray"/>
    </param>

    <param subparam="true" name="outertaper" type="stringArray"><shortdescription>uv-taper on outer baselines in uv-plane</shortdescription><description>Accepts a list of strings in the form of a quantity that sets an other threshold on baselines in the uv-plane. Usually used to achieve a lower effective angular resolution and recover more extended emission in reconstructed image. If left unset via empty list (the default) no outer taper will be applied.</description>

    <value/>
    </param>

    <param subparam="true" name="pbcor" type="bool"><shortdescription>correct synthesis images for primary beam response?</shortdescription><description>Controls whether primary beam correction is applied in the call to task tclean.</description>

      <value type="bool">True</value>
    </param>

    <param subparam="true" name="stokes" type="string"><shortdescription>Stokes parameterss to image</shortdescription><description>Stokes parameters to include in the call to tclean via the simutil method imtclean. Note that forming Stokes Q and U images requires the presence of cross-hand polarizations (e.g., RL and LR for circularly polarized systems such as the VLA) in the input data. Stokes V requires both parallel hands (RR and LL) for circularly-polarized systems or the cross-hands (XY and YX) for linearly polarized systems such as ALMA and ATCA.</description>

      <value>I</value>
      <allowed kind="enum">
  <value>I</value>
  <value>IV</value>
  <value>QU</value>
  <value>IQUV</value>
  <value>RR</value>
  <value>LL</value>
  <value>RRLL</value>
  <value>XX</value>
      <value>YY</value>
      <value>XXYY</value>
      </allowed>
    </param>

    <param subparam="true" name="featherimage" type="string"><shortdescription>image to feather with new image</shortdescription><description>String corresponding to the name of an image (e.g., total power data) to feather with the interferometric synthesis image. Sometimes it is preferable to grid the single dish MS using the sdimaging task for more control. In that case, the user can input the resulting single dish imaging under featherimage, only pass interferometric data as input to the vis parameter, and this task will clean the interferometric and feather with the featherimage.</description>

      <value/>
    </param>




<!--  ANALYZE   -->    

    <param name="analyze" type="bool"><shortdescription>create analytical images</shortdescription><description>Used to create an image of the difference between the input skymodel and the simulated output image (whether that output image is being generated in the same call to simanalyze, with image=True, or has already been generated, and simanalyze is being called with image=False). If True, only the first 6 selected subparameter outputs will be displayed.</description>

      <value>False</value>
    </param>

<!--    
    <param subparam="true" name="sim_image" type="string"><shortdescription>simulated image, created by this task or manually</shortdescription><description>simulated image, created by this task or manually</description>

      <value>$project/$project.image</value>
    </param>
-->

    <param subparam="true" name="showuv" type="bool"><shortdescription>display uv coverage</shortdescription><description>Displays a plot of the simulated uv coverage</description>

      <value>True</value>
    </param>

    <param subparam="true" name="showpsf" type="bool"><shortdescription>display synthesized beam</shortdescription><description>Displays synthesized (dirty) beam. Ignored in single dish simulation.</description>

      <value>True</value>
    </param>

    <param subparam="true" name="showmodel" type="bool"><shortdescription>display sky model at original resolution</shortdescription><description>Displays the sky model at original resolution of input image.</description>

      <value>True</value>
    </param>

    <param subparam="true" name="showconvolved" type="bool"><shortdescription>display sky model convolved with output clean beam</shortdescription><description>Displays the sky model convolved with output clean beam.</description>

      <value>False</value>
    </param>
    
    <param subparam="true" name="showclean" type="bool"><shortdescription>display the synthesized image</shortdescription><description>Displays the synthesized image produced by the call to task tclean.</description>

      <value>True</value>
    </param>

    <param subparam="true" name="showresidual" type="bool"><shortdescription>display the clean residual image</shortdescription><description>Displays the residual image produced by the call to task tclean. Ignored in single dish simulations.</description>

      <value>False</value>
    </param>

    <param subparam="true" name="showdifference" type="bool"><shortdescription>display difference between cleaned output and convolved model input</shortdescription><description>Displays a difference image between cleaned image output by the tclean call, and input model sky image convolved with synthesized beam determined by output of tclean call.</description>

      <value>True</value>
    </param>
    
    <param subparam="true" name="showfidelity" type="bool"><shortdescription>display fidelity image</shortdescription><description>Display a fidelity image. Note that the RMS is calculated in the lower quarter of the image. This is likely not the best choice, so you are encouraged to measure RMS yourself in an off-source region. Fidelity = abs(input) / max[ abs(input-output), 0.7*rms(output) ]</description>

      <value>True</value>
    </param>




    <param name="graphics" type="string"><shortdescription>where to display graphics at each stage</shortdescription><description>Controls where graphics are displayed. Options are screen, file, both, or none.</description>

      <value type="string">both</value>
      <allowed kind="enum">
  <value>screen</value>
  <value>file</value>
  <value>both</value>
  <value>none</value>
  <value/>
      </allowed>
    </param>

    <param name="verbose" type="bool"><shortdescription>report task activity</shortdescription><description>Controls task activity is reported in the log.</description>

      <value>False</value>
    </param>

    <param name="overwrite" type="bool"><shortdescription>overwrite files starting with $project</shortdescription><description>Controls whether the task will overwrite existing files starting with $project name.</description>

      <value>True</value>
    </param>

    <param visibility="hidden" name="dryrun" type="bool"><shortdescription>only print information</shortdescription><description>Experimental feature for interfermetric data only. Controls whether information pertaining to the tclean call and analysis will be recorded and written to files for inspection and adaption.</description>

      <value>False</value>
    </param>

    <param name="logfile" type="string"><shortdescription>user-defined log file</shortdescription><description>Allows for a user-defined log file naming convention if the verbose parameter is set to True.</description>

      <value/>
    </param>



        
    
    
    
    <constraints>
      <when param="image">
  <equals value="True" type="bool">
    <default param="vis"><value type="string">default</value></default>
    <default param="modelimage"><value type="string"/></default>
    <default param="imsize">
      <value>0</value>
    </default>
    <default param="imdirection">
      <value type="string"/>
    </default>
    <default param="cell"><value type="string"/></default>
    <default param="interactive"><value>False</value></default>
    <default param="niter"><value>0</value></default>
    <default param="threshold"><value type="string">0.1mJy</value></default>
    <default param="weighting"><value type="string">natural</value></default>
    <default param="mask">      <value type="intArray"/></default>
    <default param="outertaper"><value type="stringArray"/></default>
    <default param="pbcor"><value type="bool">True</value></default>
    <default param="stokes"><value type="string">I</value></default>
    <default param="featherimage"><value type="string"/></default>

  </equals>
  <equals value="False" type="bool">
    <default param="imagename"><value type="string">default</value></default>
    <default param="skymodel"><value type="string"/></default>
  </equals>
      </when>
      
      <when param="analyze">
  <equals value="False" type="bool"/>
  <equals value="True" type="bool">

    <default param="showuv"><value type="bool">True</value></default>
    <default param="showpsf"><value type="bool">True</value></default>
    <default param="showmodel"><value type="bool">True</value></default> 
    <default param="showconvolved"><value type="bool">False</value></default>
    <default param="showclean"><value type="bool">True</value></default>
    <default param="showresidual"><value type="bool">False</value></default>
    <default param="showdifference"><value type="bool">True</value></default>
    <default param="showfidelity"><value type="bool">True</value></default>
  </equals>
      </when>
    </constraints>
    
    
    
  </input>
  <returns type="void"/>

  <example>
	For more information, see the task pages of simobserve in CASA Docs:
	
	https://casa.nrao.edu/casadocs/

	Please see http://casaguides.nrao.edu, and contact the CASA helpdesk 
	with questions.
  </example>
  
</task>
</casaxml>

